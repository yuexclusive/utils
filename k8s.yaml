apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
  template:
    metadata:
      labels:
        app: consul
    spec:
      containers:
      - name: consul
        image: consul
        imagePullPolicy: Always
        ports:
        - containerPort: 8500
        env:
        - name: VERSION
          value: "v1"
        volumeMounts:
        - name: consul-data
          mountPath: /consul/data
      volumes:
      - name: consul-data
        hostPath:
          path: /etc/docker_volumes/consul
---
apiVersion: v1
kind: Service
metadata:
  name: consul
spec:
  type: NodePort
  ports:
    - targetPort: 8500
      port: 8500
      nodePort: 30011
  selector:
    app: consul
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats
        imagePullPolicy: Always
        ports:
        - containerPort: 4222
        - containerPort: 8222
        env:
        - name: VERSION
          value: "v1"
---
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  type: NodePort
  ports:
    - targetPort: 4222
      port: 4222
      nodePort: 30021
      name: "name1"
    - targetPort: 4222
      port: 8222
      nodePort: 30022
      name: "name2"
  selector:
    app: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:latest
        name: mysql
        args: 
        - --default-authentication-plugin=mysql_native_password
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: 123456
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql
        hostPath:
          path: /etc/docker_volumes/mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  ports:
  - protocol: "TCP"
    targetPort: 3306
    port: 3306
    nodePort: 30031
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-api
spec:
  selector:
    matchLabels:
      app: micro-api
  template:
    metadata:
      labels:
        app: micro-api
    spec:
      containers:
      - image: microhq/micro
        name: micro-api
        args: 
        - api
        env:
        - name: MICRO_ADDRESS
          value: :8080 
        - name: MICRO_REGISTRY
          value: consul
        - name: MICRO_REGISTRY_ADDRESS
          value: 192.168.0.102:30011
        - name: MICRO_API_HANDLER
          value: http
        - name: MICRO_API_NAMESPACE
          value: go.micro.web          
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: micro-api
spec:
  type: NodePort
  ports:
  - protocol: "TCP"
    targetPort: 8080
    port: 8080
    nodePort: 30041
  selector:
    app: micro-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-web
spec:
  selector:
    matchLabels:
      app: micro-web
  template:
    metadata:
      labels:
        app: micro-web
    spec:
      containers:
      - image: microhq/micro
        name: micro-web
        args: 
        - web
        env:
        - name: MICRO_ADDRESS
          value: :8082 
        - name: MICRO_REGISTRY
          value: consul
        - name: MICRO_REGISTRY_ADDRESS
          value: 192.168.0.102:30011     
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: micro-web
spec:
  type: NodePort
  ports:
  - protocol: "TCP"
    targetPort: 8082
    port: 8082
    nodePort: 30051
  selector:
    app: micro-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        hostPath:
          path: /etc/docker_volumes/redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: NodePort
  ports:
  - protocol: "TCP"
    targetPort: 6379
    port: 6379
    nodePort: 30061
  selector:
    app: redis